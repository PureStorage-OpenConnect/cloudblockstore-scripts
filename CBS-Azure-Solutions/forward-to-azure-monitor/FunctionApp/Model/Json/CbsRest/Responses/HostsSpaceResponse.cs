// Generated by https://quicktype.io

namespace Model.Json.CbsRest.Responses.HostSpace
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class HostsSpaceResponse
    {
        [JsonProperty("continuation_token")]
        public object ContinuationToken { get; set; }

        [JsonProperty("items")]
        public Item[] Items { get; set; }

        [JsonProperty("more_items_remaining")]
        public object MoreItemsRemaining { get; set; }

        [JsonProperty("total")]
        public object[] Total { get; set; }

        [JsonProperty("total_item_count")]
        public object TotalItemCount { get; set; }
    }
//	{"continuation_token":null,"items":[{"time":1704900586000,"name":"cbsavspv2","id":"92012fab-e137-4f2b-9887-5acf773bda56",
//"space":{"data_reduction":4.261013483861121,"shared":62664339552,"snapshots":203274814769,"system":0,"thin_provisioning":null,"total_physical":294155836256,"total_provisioned":35233838661632,"total_reduction":null,
//"unique":28216681935,"virtual":null,"unique_effective":302184851456,"snapshots_effective":607040738304,"total_effective":962124627456,"used_provisioned":35233838661632,"replication":0,"shared_effective":52899037696},
//"capacity":5108656519812,"parity":1.0}],"more_items_remaining":null,"total":[],"total_item_count":null}
    public partial class Item
    {
        [JsonProperty("time")]
        public long Time { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("space")]
        public Dictionary<string, object> Space { get; set; }

        [JsonProperty("capacity")]
        public long Capacity { get; set; }

        [JsonProperty("parity")]
        public long Parity { get; set; }
    }

    public partial class HostsSpaceResponse
    {
        public static HostsSpaceResponse FromJson(string json) => JsonConvert.DeserializeObject<HostsSpaceResponse>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this HostsSpaceResponse self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
